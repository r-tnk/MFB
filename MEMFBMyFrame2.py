"""Subclass of MyFrame2, which is generated by wxFormBuilder."""

import wx
import MEMFB
import os
import sys
from PIL import Image
 
# Implementing MyFrame2
class MEMFBMyFrame2( MEMFB.MyFrame2 ):
	def __init__( self, parent ):
		MEMFB.MyFrame2.__init__( self, parent )
	
	# Handlers for MyFrame2 events.
	def BrowsOnDirChanged( self, event ):
		# TODO: Implement BrowsOnDirChanged
		os.chdir(self.m_dirPicker1.GetPath())
		with open('path.txt', 'w') as pa:
			print(self.m_dirPicker1.GetPath(),file=pa)
		pass
	
	def SETXOnButtonClick( self, event ):
		# TODO: Implement SETXOnButtonClick
		with open('xset.txt', 'w') as fx:
			print(self.XL.GetValue(),file=fx)
			print(self.XGrid.GetValue(),file=fx)
		pass
	
	def SETYOnButtonClick( self, event ):
		# TODO: Implement SETYOnButtonClick
		with open('yset.txt', 'w') as fy:
			print(self.YL.GetValue(), file=fy)
			print(self.YGrid.GetValue(),file=fy)
		pass
	
	def SETZOnButtonClick( self, event ):
		# TODO: Implement SETZOnButtonClick
		with open('dzset.txt', 'w') as fz:
			print(self.ZL.GetValue(), file=fz)
			print(self.ZGrid.GetValue(),file=fz)
		pass
	
	def SETEXOnButtonClick( self, event ):
		# TODO: Implement SETEXOnButtonClick
		pass
	
	def SETPOINTSOnButtonClick( self, event ):
		# TODO: Implement SETPOINTSOnButtonClick  
		with open('blh2xyz_obs.in', 'w') as fb:
			print('obs.txt', file=fb)
			print('W, 2', file=fb)
			print(self.m_comboBox11.GetStringSelection(), file=fb)
		with open('blh2xyz_land.in', 'w') as fb:
			print('out.xyz', file=fb)
			print('W, 2', file=fb)
			print(self.m_comboBox11.GetStringSelection(), file=fb)
		with open('blh2xyz_sea.in', 'w') as fb:
			print('seaout.xyz', file=fb)
			print('W, 2', file=fb)
			print(self.m_comboBox11.GetStringSelection(), file=fb)
		with open('obsp.txt', 'w') as fo:
			print(self.Center.GetValue(),file=fo)
			print(self.Obs.GetValue(),file=fo)
		os.system('sh obs.sh')
		pass
	
	def ADrawONButtonClick( self, event ):
		# TODO: Implement ADrawONButtonClick
		os.system('range')
		os.system('sh point.sh')
		im = Image.open("point.ps")
		im.show()
		pass
	
	def DrawGridOnClick( self, event ):
		# TODO: Implement DrawGridOnClick
		with open('xmin2D.txt', 'w')as xi:
			print(self.XminG.GetValue(),file=xi)
		with open('xmax2D.txt', 'w')as xa:
			print(self.XMaxG.GetValue(),file=xa)
		with open('ymin2D.txt', 'w')as yi:
			print(self.YminG.GetValue(),file=yi)
		with open('ymax2D.txt', 'w')as ya:
			print(self.YMaxG.GetValue(),file=ya)
		os.system('sh point.sh')
		im = Image.open("point.ps")
		im.show()
		pass
	
	def TopoOnClick( self, event ):
		# TODO: Implement TopoOnClick
		os.system('sh MEMFilebuilder.sh')
		pass
	
	def SparasetOnclick( self, event ):
		# TODO: Implement SparasetOnclick
		with open('spara.txt', 'w') as sp:
			print(self.Spara.GetValue(), file=sp)
		pass
	
	def IRVOnClick( self, event ):
		# TODO: Implement IRVOnClick
		with open('IRV.txt', 'w') as ir:
                        print(self.IRV.GetValue(), file=ir)
		pass
	
	def CreateFIlesOnVlick( self, event ):
		# TODO: Implement CreateFIlesOnVlick
		os.system('sh CreateFiles.sh')
		pass
	
	def ADraw3DOnClick( self, event ):
		# TODO: Implement ADraw3DOnClick
		os.system('range')
		os.system('sh 3D.sh')
		im = Image.open("topo.ps")
		im.show()
		pass
	
	def Draw3DOnClick( self, event ):
		# TODO: Implement Draw3DOnClick
		with open('xmin3D.txt', 'w')as xi:
                        print(self.XMin3D.GetValue(),file=xi)
		with open('xmax3D.txt', 'w')as xa:
                        print(self.XMax3D.GetValue(),file=xa)
		with open('ymin3D.txt', 'w')as yi:
                        print(self.YMin3D.GetValue(),file=yi)
		with open('ymax3D.txt', 'w')as ya:
                        print(self.YMax3D.GetValue(),file=ya)
		with open('sc.txt', 'w')as sc:
			print(self.SCSET.GetValue(),file=sc)
		with open('Az.txt', 'w')as az:
			print(self.AZSET.GetValue(),file=az)
		with open('EL.txt', 'w')as el:
			print(self.ELSET.GetValue(),file=el)
		os.system('sh 3D.sh')
		im = Image.open("topo.ps")
		im.show()
		pass
	
	def DoneOnClick( self, event ):
		# TODO: Implement DoneOnClick
		sys.exit()
		pass
	
	
